name: Playwright Tests by Dynamic Folder 1.0

on:
  workflow_dispatch:   # ‚Üê solo manual

jobs:
  detect-folders:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.set-matrix.outputs.folders }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect test folders
        id: set-matrix
        run: |
          # Detecta carpetas de primer nivel bajo tests/
          folders=$(find tests -mindepth 1 -maxdepth 1 -type d \
            | sed 's/^/"/; s/$/"/' \
            | paste -sd, -)
          echo "folders=[$folders]" >> "$GITHUB_OUTPUT"

  run-tests:
    needs: detect-folders
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-folders.outputs.folders) }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests in ${{ matrix.folder }}
        id: run
        run: |
          folder="${{ matrix.folder }}"
          folderName=$(basename "$folder")
          echo "folderName=$folderName" >> "$GITHUB_OUTPUT"

          echo "üß™ Running tests in $folder"
          # Ejecuta tests y genera siempre 'playwright-report' en la ra√≠z
          npx playwright test "$folder" --reporter=list,html,json=results --retries=0 || true
          # npx playwright test "$folder" --reporter=list,html,json=results.json --retries=0 || true
 
         
          # Si existe el reporte, lo renombra para distinguir carpetas
          if [ -d "playwright-report" ]; then
            mv playwright-report "playwright-report-${folderName}"
          fi
    
      - name: Debug report directories
        run: |
          echo "=== Reports in workspace root ==="
          ls -d playwright-report-* || echo "No se encontraron reportes"

      - name: Upload report for ${{ steps.run.outputs.folderName }}
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ steps.run.outputs.folderName }}
          path: playwright-report-${{ steps.run.outputs.folderName }}
          retention-days: 30

      - name: Send results.json to n8n
        if: ${{ always() }}
        run: |
            folder="${{ matrix.folder }}"
            folderName=$(basename "$folder")

            if [ -f "results.json" ]; then
            echo "üì§ Enviando results.json de $folderName a n8n..."
            curl -X POST https://testscript.app.n8n.cloud/webhook/playwright-results \
            -H "Content-Type: application/json" \
            --data-binary @results.json
            else
            echo "‚ö†Ô∏è No se encontr√≥ results.json en la ra√≠z del workspace"
            fi

